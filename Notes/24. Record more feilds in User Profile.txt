1. Extend User models
- Create new model "Profile" and link to the Django User

models.py
from django.contrib.auth.models import User
from django.db.models.signals import post_save

#Create Customer Profile
class Profile(models.Model):
    #Associate one profile with one User
    user = models.OneToOneField(User, on_delete=models.CASCADE) #Delete associated Profile if User account deleted
    date_modified = models.DateTimeField(User, auto_now=True)

    phone = models.CharField(max_length=20, blank=True)
    address1 = models.CharField(max_length=200, blank=True)
    address2 = models.CharField(max_length=200, blank=True)
    city = models.CharField(max_length=200, blank=True)
    state = models.CharField(max_length=200, blank=True)
    zipcode = models.CharField(max_length=200, blank=True)
    country = models.CharField(max_length=200, blank=True)

    def __str__(self):
        return self.user.username #Will be displayed in /admin

# Create User profile by default when user signs up
def create_profile(sender, instance, created, **kwargs):
    if created:
        user_profile = Profile(user=instance)
        user_profile.save()

# AUtomate
post_save.connect(create_profile, sender=User)


2. Update the admin.py to reflect changes in the admin panel
admin.site.register(Profile)

# Mix Profile and User Info
class ProfileInline(admin.StackedInline):
    model = Profile
    
#Extend User Model
class UserAdmin(admin.ModelAdmin):
    model = User
    field = ["username", "first_name", "last_name", "email"]

    inlines = [ProfileInline] #Get other feilds

#Unregister old way
admin.site.unregister(User)

#Re register new way
admin.site.register(User, UserAdmin)


3. Create new url update info
path('update_info/', views.update_info, name='update_info'),

4. Create view

5. Create HTML





