Allows to save things in the Database.


1. Setup admin
run manage.py
createsuperuser

2. Visit localhost:8000/admin
Enter creds and login

3. Create media directory in  main dir and configure in settings.py and project urls.py

- settings.py
import os

Below STATIC_URL = 'static/'
MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

- urls.py
from Django.confi import settings
from Django.conf.urls.static import static

urlpatters = [] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)


4. Creating the models
store/models.py

from Django.db import models
import datetime

Models we need;
1. Category
2. Customer
3. Product
4. Order


class Category(models.Model):
	name = models.CharField(max_length=50)

	def __str__(self):
		return self.name  #Appears in admin


	class Meta: # To have exact spelling in admin, as Django pluralizes the name in admin panel like 'Categorys'
        	verbose_name_plural = 'Categories'



class Customer(models.Model):
	first_name = models.CharField(max_lenngth=50)
	last_name = models.CharField(max_length=50)
	phone = models.CharField(max_length=10)
	email = models.EmailField(max_length=100)
	password = models.CharField(max_length=100)

	def __str__(self):
		return f"{self.first_name} {self.last_name}"  #Appears in admin


class Product(models.Model):
	name = models.CharField(max_lenngth=100)
	price = models.DecimalField(default=0, decimal_places=2, max_digits=6) # $9999.99
	category = models.ForeignKey(Catrgory, on_delete=models.CASCADE, default=1) #Reference the Category Model. default is the first category
	description = models.CharField(max_lenngth=100, default='', blank=True, null=True) Blank is optional, null is no description then ok
	image = models.ImageField(upload_to="uploads/product/")

	def __str__(self):
		return self.name  #Appears in Admin


class Order(models.Model):
	product = models.ForeignKey(Product, on_delete=models.CASCADE) #Reference Product Model
	customer = models.ForeignKey(Customer, on_delete=models.CASCADE) #Reference Customer Model
	quantity = models.IntegerField(default=1)
	address = models.CharField(max_length=100, default='', blank=True)
	phone = models.CharField(max_length=20, default='', blank=True) #It's ok if they dont add a phone number
	date = models.DateField(default=datetime.datetime.today)
	status = models.BooleanField(default=False) #Not Shipped

	def __str__(self):
		return f" {self.product.name}"	#Access the name from the Products Model


5. Install pillow which is a python image library
.venv\Scripts\activate  
 python -m pip install Pillow

pipinstall Pillow

6. Add to admin sections in app (store) admin.py
from . models import Category, Customer, Product, Order

admin.site.register(Category)
admin.site.register(Customer)
admin.site.register(Product)
admin.site.register(Order)


7. Make migrations & Run server

8. Login to admin and add the data.

















