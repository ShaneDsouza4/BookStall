1. Add URL
path('update_user/', views.update_user, name='update_user'),


2. Template update_user.html

Copy register.html
 <div class="container">
        <div class="row">
            <center>
                <div class="col-8">
                    <br/>
                    <form method="POST" action="{% url 'update_user' %}">
                        {% csrf_token %}
                        {{ form.as_p }}
                        <button type="submit" class="btn btn-secondary" >Update Profile</button>
                    </form>
                </div>
            </center>
        </div>
     </div>

3. Views.py file
def update_user(request):
    return render(request, 'update_user.html', {})

4. Update navbar
<li class="nav-item"><a class="nav-link" href="{% url 'update_user' %}">Profile</a></li>



5. Create change form in forms.py
from django.contrib.auth.forms import UserCreationForm, UserChangeForm

class UpdateUserForm(UserChangeForm):
    password = None #Hide password stuff

    #Other fields
    email = forms.EmailField(label="Email")
    first_name = forms.CharField(label="First name")
    last_name = forms.CharField(label="Last Name", max_length=100)
    username = forms.CharField(label="Username", max_length=150)

    class Meta:
        model = User
        fields = ('username', 'first_name', 'last_name')


6. Import form and use in views.py file
def update_user(request):
    if request.user.is_authenticated:
        current_user = User.objects.get(id=request.user.id)

        #If they are posting, or use their current instance
        user_form = UpdateUserForm(request.POST or None, instance=current_user)

        # THey filled the form
        if user_form.is_valid():
            user_form.save()

            #Log back in with updated details
            login(request, current_user)
            messages.success(request, 'Your account has been updated!')
            return redirect('home')

        #ELse they are going to the page to edit
        return render(request, 'update_user.html', {'user_form': user_form})
    else: #If user is not logged in
        messages.success(request, 'You must be logged in to access this page')
        return redirect('home')



